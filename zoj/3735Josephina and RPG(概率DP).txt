#include <iostream>   //我是沙茶.....状态应该很好推比如dpi,j 代表第i轮成为j并且成功闯关的概率。。然后一直递推就可以了。。
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define maxn 10010
#define INF 2100001000
#define mod 10007
#define link fsafsdfas
using namespace std;
typedef long long LL;
double p[150][150];
double dp[maxn][150];
int x[maxn];
int n,m;
int main(void){
    while(EOF != scanf("%d",&n)){
        n = (n*(n-1)*(n-2))/6;
        REP(i,n)REP(j,n)scanf("%lf",&p[i][j]);
        scanf("%d",&m);
        FOR(i,1,m) scanf("%d",x+i);
        FOR(i,0,m)rst(dp[i],0);
        FOR(i,0,n)dp[0][i] = 1.0;
        FOR(i,1,m){
            FOR(j,0,n-1){
                dp[i][j] = dp[i-1][j]*p[j][x[i]];
                if(j == x[i]){
                    FOR(k,0,n-1) dp[i][j] = MAX(dp[i][j],dp[i-1][k]*p[k][j]);
                }
            }
        }
        double ans = 0;
        FOR(i,0,n-1) ans = MAX(ans,dp[m][i]);
        printf("%.6lf\n",ans);
    }return 0;
}