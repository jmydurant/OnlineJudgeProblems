#include <iostream>   //我是沙茶.....正反各匹配一次。。
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define maxn 110
#define INF 2100001000
#define mod 1000000007LL
#define link fsafsdfas
using namespace std;
typedef long long LL;
char temp[maxn],s[maxn][maxn];
int nxt[maxn],n;
void getnxt(void){
    int len = strlen(temp);
    nxt[0] = -1; int k = -1;
    FOR(i,1,len-1){
        while(k>-1 && temp[i] != temp[k+1]) k = nxt[k];
        if(temp[i] == temp[k+1]) k++;
        nxt[i] = k;
    }
}
bool KMP(char *a){
    int len = strlen(temp);
    int ss = strlen(a);
    int k = -1;
    FOR(i,0,ss-1){
        while(k>-1 && a[i] != temp[k+1])k = nxt[k];
        if(a[i] == temp[k+1])k++;
        if(k == len-1)return true;
    }
    k = -1;
    FORD(i,ss-1,0){
        while(k>-1 && a[i] != temp[k+1])k = nxt[k];
        if(a[i] == temp[k+1])k++;
        if(k == len-1)return true;
    }return false;
}
bool judge(void){
    getnxt();
    FOR(i,2,n)if(!KMP(s[i]))return false;
    return true;
}
void INIT(void){
    scanf("%d",&n);
    FOR(i,1,n) scanf("%s",s[i]);
    int len = strlen(s[1]);
    int ans = 0;
    FORD(i,len,0){
        FOR(j,0,len-i){
            rst(temp,0);
            strncpy(temp,s[1]+j,i);
            if(judge()){ans = strlen(temp);break;}
        }if(ans)break;
    }
    printf("%d\n",ans);
}
int main(void){
    int casenum; scanf("%d",&casenum);
    while(casenum--)INIT();
    return 0;
}







