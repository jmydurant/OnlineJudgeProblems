#include<cstdio>   //是discussion上面的人说的方法。。但是他的函数和我不一样。。。方法可以借鉴一下哈。。。
#include<climits>
#include<algorithm>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<cmath>
#include<stack>
#include<map>
#include<vector>
#define abs(a)  ((a)>0?(a):(-(a)))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define INF 1000000000000LL
#define lowbit(a) (a)^(-(a))
using namespace std;
int dx[]={0,-1,-1,0,1,1};
int dy[]={1,1,0,-1,-1,0};

int main(void)
{
    int N;
    while(EOF!=scanf("%d",&N))
    {
        if(N==1)
        {
            printf("%d %d\n",0,0);
            continue;
        }
        double n=(double)N;
        double m=sqrt(12.0*n-3.0);
        m+=3.0;
        m/=6.0;
        //printf("%lf pass\n",m);
        double k=floor(m);
        if(k!=m)
        {
            k+=1.0;
        }
        //printf("%lf\n",k);
        int loop=(int)k;
        int beg=3*(loop-1)*(loop-1)-3*(loop-1)+1;
        //printf("%d pass\n",beg);
        int x=loop-2,y=0;
        while(1)
        {
            beg++;
            x+=dx[0]; y+=dy[0];
            if(beg==N)break;
            bool flag=false;
            for(int i=1;i<=loop-2;i++)
            {
                beg++;
                x+=dx[1]; y+=dy[1];
                if(beg==N)
                {
                    flag=true;
                    break;
                }
            }
            if(flag)break;
            for(int i=2;i<=5;i++)
            {
                for(int j=1;j<=loop-1;j++)
                {
                    beg++;
                    x+=dx[i]; y+=dy[i];
                    if(beg==N)
                    {
                        flag=true;
                        break;
                    }
                }
                if(flag)break;
            }
            if(flag)break;
            for(int i=1;i<=loop-1;i++)
            {
                beg++;
                x+=dx[0]; y+=dy[0];
                if(beg==N)
                {
                    flag=true;
                    break;
                }
            }
            if(flag)break;
        }
        printf("%d %d\n",x,y);
    }
    return 0;
}
首先，记由1到2的方向记为2，1到3的方向记为3……1到7的方向记为7，他们分别是：(0,1),(-1,1),(-1,0),(0,-1),(1,-1),(1,0);这些规律不仅对于1的周围六个方向有效，对于所有的点都是有效的。然后记1所在为圈1，2..7为圈1，8..19为圈2……，所以，很容易可以得到第n圈有蜂窝6n个(n>0)，对于这个等差数列求和，S[1..n]=3n^2+3n，包括第0圈的1，则S[0..n]=3n^2+3n+1。

读入数字x,解方程3n^2+3n+1=x，解出来n=[sqrt(12x-3)-3]/6
如果n为整数，则圈数p=n，否则p=trunc(n)+1，又可以通过公式t:=x-3*sqr(p)+3*p-1;求出t（x是第n圈的第t个）。

可以发现，从上一圈的最后一点，即(p-1,0)走到目的点，首先应在2方向上走1步，再沿(-1,1)走p-1步，其余的5个方向都走p步，此外每走一次，t就要减去相应的值，当t=0时，就可以退出循环，这样就可以很容易得到答案。
