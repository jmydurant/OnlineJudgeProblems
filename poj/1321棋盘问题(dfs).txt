#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //跟皇后问题一样的dfs.....
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 200
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
#define link fjksldfjaslkdfjas
#define y1 fslkd
using namespace std;
typedef long long LL;
int n , k;
int ans , visit[10];
char puzzle[10][10];
void dfs(int col,int use){
    if(col == n + 1){
        if(use == k)ans++;
        return;
    }
    if(use > k || use + n - col + 1 < k){
        return;
    }
    FOR(i,1,n){
        if(visit[i] == false && puzzle[i][col] == '#'){
            visit[i] = true;
            dfs(col+1 , use+1);
            visit[i] = false;
        }
    }
    dfs(col+1 , use);
}
void solve(void){
    FOR(i,1,n) scanf("%s",puzzle[i] + 1);
    rst(visit,false); ans = 0;
    dfs(1,0);
    printf("%d\n",ans);
}
int main(void){
    while(2 == scanf("%d%d",&n,&k)){
        if(n == -1 && k == -1) return 0;
        solve();
    }
}
