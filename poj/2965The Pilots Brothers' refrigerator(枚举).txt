#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //标准应该是用bfs的。。但是我习惯用状压了。。就这样吧。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-9
#define INF 1400000000
#define maxn 1010101
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
int ans,state;
char ss[10][10];
const int top = (1<<16);
int cal(int n){
    int res = 0;
    while(n){
        if(n & 1)res++;
        n >>= 1;
    }return res;
}
inline int t(int x,int y){
    return h(x * 4 + y);
}
int now;          //记录初始状态
int path[16];
void INIT(void){
    rst(path,0);
    REP(i,4){
        REP(j,4){
            REP(k,4){
                path[4*i+j] |= (t(i,k));
                path[4*i+j] |= (t(k,j));
            }
        }
    }
}
int main(void){
    INIT();
    while(~scanf("%s",ss[0])){
        FOR(i,1,3) scanf("%s",ss[i]);
        now = 0;
        REP(i,4)REP(j,4){
            now <<= 1;
            if(ss[i][j] == '+')now |= 1;
        }
        ans = INF;
        REP(st,top){
            int tt = cal(st);
            if(tt >= ans)continue;
            int fuck = now;
            REP(ii,16){
                if(st & (1<<ii)){
                    fuck ^= path[15-ii];
                }
            }
            if(!fuck){
                state = st;
                ans = tt;
            }
        }
        printf("%d\n",ans);
        //int x = 0,y = 0;
        REP(ii,16){
            if(state & (h(ii))){
                printf("%d %d\n",ii / 4 + 1,ii % 4 + 1);
            }
        }
    }return 0;
}
