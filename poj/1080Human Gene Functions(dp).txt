#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //思路有点和最长公共子序列相似。。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 101010
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
inline int cal(char c){
    if(c == 'A')return 0;
    if(c == 'C')return 1;
    if(c == 'G')return 2;
    return 3;
}
int pp[5][5] = {{5,-1,-2,-1,-3},
                {-1,5,-3,-2,-4},
                {-2,-3,5,-2,-2},
                {-1,-2,-2,5,-1},
                {-3,-4,-2,-1,0}
};
int la,lb , dp[110][110];
char a[110] , b[110];
void solve(void){
    scanf("%d%s%d%s",&la,a,&lb,b);
    rst(dp,0);
    REP(i,la) dp[i+1][0] = dp[i][0] + pp[cal(a[i])][4];
    REP(i,lb) dp[0][i+1] = dp[0][i] + pp[4][cal(b[i])];
    REP(i,la){
        REP(j,lb){
            int ca = cal(a[i]) , cb = cal(b[j]);
            dp[i+1][j+1] = MAX(dp[i][j+1] + pp[ca][4] , dp[i+1][j] + pp[4][cb]);
            dp[i+1][j+1] = MAX(dp[i+1][j+1] , dp[i][j] + pp[ca][cb]);
        }
    }
    printf("%d\n",dp[la][lb]);
}
int main(void){
    int casenum; scanf("%d",&casenum);
    while(casenum--) solve();
    return 0;
}
