#include<cstdio>      //就是区间筛素数罢了。。。
#include<climits>
#include<algorithm>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<cmath>
#include<stack>
#include<map>
#include<vector>
#define abs(a)  ((a)>0?(a):(-(a)))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define INF -0x0f0f0f0f
#define lowbit(a) (a)^(-(a))
using namespace std;
bool visit[1000100];
int prime[5000];
int douprime[1000010];
int tot;
int L,U;
void INIT(void)
{
    memset(visit,0,sizeof(visit));
    tot=0;
    for(long long i=2;i<=46342;i++)
    {
        if(!visit[i])
        {
            prime[++tot]=i;
            for(long long j=i*i;j<=46342;j+=i)
                visit[j]=true;
        }
    }
   // printf("%d %d\n",tot,prime[tot]);
}
void solve(int l,int r)
{
    if(l<2)l=2;
    memset(visit,0,sizeof(visit));
    int base=l;
    for(int i=1;i<=tot && prime[i]*prime[i]<=r;i++)
    {
        unsigned int j;
        if(prime[i]*prime[i]>=l)
            j=prime[i];
        else if(l/prime[i]*prime[i]==l)
            j=l/prime[i];
        else
            j=l/prime[i]+1;
        for(j=j*prime[i];j<=r;j+=prime[i])
            visit[j-base]=true;
    }
    int MINN=INT_MAX,MAXN=-1;
    int pre=-1,a1,a2,a3,a4;
    for(unsigned int i=l;i<=r;i++)
    {
        if(!visit[i-base])
        {
            //printf("pass %d\n",i);
            if(-1==pre)
            {
                //printf("pass pass %d\n",i);
                pre=i;
                continue;
            }
            int tmpt=i-pre;
            //printf("%d pass",tmpt);
            if(tmpt>MAXN)
            {
                //printf("pass MAX\n");
                MAXN=tmpt;
                a3=pre;
                a4=i;
            }
            if(tmpt<MINN)
            {
                //printf("pass MIN\n");
                MINN=tmpt;
                a1=pre;
                a2=i;
            }
            pre=i;
        }
    }
    if(MAXN<=0)
    {
        printf("There are no adjacent primes.\n");
    }
    else
    {
        printf("%d,%d are closest, %d,%d are most distant.\n",a1,a2,a3,a4);
    }
}
int main(void)
{
    INIT();
    while(2==scanf("%d%d",&L,&U))
    {
        solve(L,U);
    }
    return 0;
}
