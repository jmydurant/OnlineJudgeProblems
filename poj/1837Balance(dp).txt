#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //有点类似于背包问题。。dpi j 代表第i个物品如果力矩要凑成j的方法数。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 101010
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
#define mid 150001
int dp[21][300010];
int c,n;
int cc[21] , vv[21];
int main(void){
    while(2 == scanf("%d%d",&c,&n)){
        //FOR(i,0,300009)FOR(j,0,20) dp[j][i] = -INF;
        rst(dp,0);
        dp[0][mid] = 1;
        FOR(i,1,c) scanf("%d",cc+i);
        FOR(i,1,n) scanf("%d",vv+i);
        int l = mid,r = mid;
        int tl = mid,tr = mid;
        FOR(i,1,n){
            FOR(j,1,c){
                int tt = cc[j]*vv[i];
                FOR(k,l,r){
                    if(dp[i-1][k] > 0)
                    dp[i][k+tt] += dp[i-1][k];
                }
                if(tt > 0) tr = MAX(tr , r + tt);
                else if(tt < 0) tl = MIN(tl , l + tt);
            }
            l = tl; r = tr;
        }
        printf("%d\n",dp[n][mid]);
    }return 0;
}
