#include<cstdio>   //一道比较中规中矩的概率DP。。。思路见下。。懒得自己总结了。。因为确实不算难。。。
#include<climits>
#include<algorithm>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<cmath>
#include<stack>
#include<map>
#include<vector>
#define abs(a)  ((a)>0?(a):(-(a)))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define INF 1000000000000LL
#define lowbit(a) (a)^(-(a))
using namespace std;
double dp[8][200];
double P[200][200];
int main(void)
{
    int N;
    while(EOF!=scanf("%d",&N))
    {
        if(-1==N)break;
        for(int i=0;i<(1<<N);i++)
        {
            for(int j=0;j<(1<<N);j++)
                scanf("%lf",&P[i][j]);
        }
        for(int i=0;i<(1<<N);i++)
        {
            dp[0][i]=1.0;
        }
        for(int i=1;i<=N;i++)
        {
            for(int j=0;j<(1<<N);j++)
            {
                dp[i][j]=0.0;
                int t=j/(1<<(i-1));
                t^=1;
                for(int k=t*(1<<(i-1)); k<(t+1)*(1<<(i-1));k++)
                {
                    dp[i][j]+=dp[i-1][j]*dp[i-1][k]*P[j][k];
                }
            }
        }
        double ans=0.0;
        int tmpt;
        for(int i=0;i<(1<<N);i++)
        {
            if(dp[N][i]>ans)
            {
                ans=dp[N][i];
                tmpt=i+1;
            }
        }
        printf("%d\n",tmpt);
    }
    return 0;
}
题意：2^n个队进行足球赛，每个队打败另外一个队都有一个概率。
问最后胜利的概率最大的是哪只球队。
概率DP。
设dp[i][j]表示第i场比赛第j个球队胜利的概率。
画图看看就可以得出公式了。
第一轮，(1,2)(3,4)(5,6)``````
很容易算出来。
第二轮的时候。
比如算3胜出的概率。首先是3在第一轮要胜出，同时要打败(1,2)种的胜者，这是全概率公式了。