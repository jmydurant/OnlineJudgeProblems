#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //区间选点覆盖问题。。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 1010101
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
double d;
struct node{
    double x,y;
    bool operator < (const node &a)const{
        return y < a.y;
    }
}p[1101];
int n,iCase;
void die(void){
    printf("Case %d: -1\n",iCase);
}
inline double po(double x){
    return x * x;
}
void solve(void){
    REP(i,n){
        cin >> p[i].x >> p[i].y;
    }
    sort(p,p+n);
    iCase++;
    REP(i,n){
        if(p[i].y > d + eps){
            die();
            return;
        }
        double deta = sqrt(po(d) - po(p[i].y));
        p[i].y = p[i].x + deta;
        p[i].x -= deta;
        //cout << p[i].x << "   " << p[i].y << endl;
    }
    sort(p,p+n);
    double ls = p[0].y;
    int ans = 1;
    REP(i,n){
        if(ls >= p[i].x)continue;
        ls = p[i].y;
        ans++;
    }
    printf("Case %d: %d\n",iCase,ans);
}
int main(void){
    iCase = 0;
    while(cin >> n >> d){
        if(n == 0)return 0;
        solve();
    }
    return 0;
}
