#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //把序列构造出来之后再去解就好办了。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 1010101
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
int n;
int a[200];
bool visit[200];
void solve(void){
    int top = 0;
    int last = 0;
    scanf("%d\n",&n);
    FOR(i,1,n){
        int ooxx;
        scanf("%d",&ooxx);
        REP(kk,ooxx - last){
            a[top] = 1;
            top++;
        }
        last = ooxx;
        a[top] = 2;
        top++;
    }
    //REP(i,top){
    //    printf("%d ",a[i]);
    //}printf("\n");
    rst(visit,0);
    REP(i,top){
        if(a[i] == 2){
            FORD(j,i-1,0){
                if(visit[j] || a[j] == 2)continue;
                visit[j] = 1;
                printf("%d%c",(i-j)/2+1, (i == top-1)?'\n':' ');
                break;
            }
        }
    }
}
int main(void){
    int casenum; scanf("%d",&casenum);
    while(casenum--){
        solve();
    }return 0;
}
