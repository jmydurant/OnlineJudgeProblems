#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //水。。数字三角。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 101010
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
int a[400][400] , dp[400][400] , n;
void solve(void){
    FOR(i,1,n){
        FOR(j,1,i)scanf("%d",&a[i][j]);
    }
    FOR(i,1,n) dp[n][i] = a[n][i];
    FORD(i,n-1,1){
        FOR(j,1,i){
            dp[i][j] = MAX(dp[i+1][j] , dp[i+1][j+1]) + a[i][j];
        }
    }printf("%d\n",dp[1][1]);
}
int main(void){
    while(EOF != scanf("%d",&n)) solve();
    return 0;
}
