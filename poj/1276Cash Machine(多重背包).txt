#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>
#include <cstring>   //检测可行性的话。。只需要NV时间。。dp[i][j]表示用第i个物品装j空间的时候，最多能剩几个。。
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 101010
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
#define mid 150001
int dp[11][100010];
int v[11] , m[11];
int n , HP;
int main(void){
    while(2 == scanf("%d%d",&HP,&n)){
        FOR(i,1,n) scanf("%d%d",m+i , v+i);
        rst(dp[0] , -1);
        dp[0][0] = 0;
        FOR(i,1,n){
            FOR(j,0,HP){
                if(dp[i-1][j] >= 0)dp[i][j] = m[i];
                else dp[i][j] = -1;
            }
            FOR(j,0,HP-v[i]){
                if(dp[i][j] >= 0){
                    dp[i][j+v[i]] = MAX(dp[i][j+v[i]] , dp[i][j] - 1);
                }
            }
        }
        FORD(i,HP,0)if(dp[n][i] >= 0){
            printf("%d\n",i);
            break;
        }
    }return 0;
}
