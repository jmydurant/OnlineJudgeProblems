#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //要细心。。否则。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 1010101
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
int dx[] = {0,1,0,-1};
int dy[] = {1,0,-1,0};
struct node{
    int x,y;
    int dir;
}robot[110];
int n,Q;
int row,col;
struct kill_la_kill{
    int a,b;
}res;
int judge(char misaka){
    if(misaka == 'E')return 1;
    else if(misaka == 'S')return 2;
    else if(misaka == 'W')return 3;
    else return 0;
}
int die(int no){
    if(robot[no].x <= 0 || robot[no].x > row || robot[no].y <= 0 || robot[no].y > col )return -1;
    FOR(i,1,n){
        if(no == i)continue;
        if(robot[no].x == robot[i].x && robot[no].y == robot[i].y)return i;
    }
    return 0;
}
void solve(void){
    scanf("%d%d",&row,&col);
    scanf("%d%d",&n,&Q);
    res.a = 0;
    char op[10];
    FOR(i,1,n){
        scanf("%d%d",&robot[i].x,&robot[i].y);
        scanf("%s",op);
        robot[i].dir = judge(op[0]);
    }
    bool getans = false;
    while(Q--){
        int no,repeat;
        scanf("%d%s%d",&no,op,&repeat);
        REP(i,repeat){
            if(op[0] == 'F'){
                robot[no].x += dx[robot[no].dir];
                robot[no].y += dy[robot[no].dir];
                int tt = die(no);
                if(tt != 0 && (!getans)){
                    res.a = no;
                    res.b = tt;
                    //printf("happen at %d %d\n",robot[no].x , robot[no].y);
                    getans = true;
                    break;
                }
            }else if(op[0] == 'R'){
                robot[no].dir++;
                robot[no].dir %= 4;
            }else {
                robot[no].dir += 3;
                robot[no].dir %= 4;
            }
        }
        //if(no == 91)printf("position %d %d\n",robot[no].x , robot[no].y);
    }
    if(getans){
        if(res.b != -1){
            printf("Robot %d crashes into robot %d\n",res.a,res.b);
        }else{
            printf("Robot %d crashes into the wall\n",res.a);
        }
    }else{
        printf("OK\n");
    }
}
int main(void){
    int casenum; scanf("%d",&casenum);
    while(casenum--)solve();
    return 0;
}
