#include <cstdio>
#include <cstring>    //Ïê¼û±³°ü¾Å½²¡£¡£¡£¡£
#include <algorithm>
#include <queue>
#include <climits>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define maxn 420100
using namespace std;

int iCase;
int dp[7][maxn];
int main()
{
    int a[7];
    iCase = 0;
    while(true)
    {
        int sum = 0;
        FOR(i,1,6) scanf("%d",a+i),sum += a[i]*i;
        bool quit = true;
        FOR(i,1,6)if(a[i])quit = false;
        if(quit)break;
        printf("Collection #%d:\n",++iCase);
        if(sum &1)
        {
            printf("Can't be divided.\n\n");
            continue;
        }
        sum /= 2;
        rst(dp[1],-1);
        FOR(i,0,a[1])dp[1][i] = i;
        FOR(i,2,6)
        {
            FOR(v,0,sum)
            {
                if(dp[i-1][v]>=0)
                    dp[i][v] = a[i];
                else
                    dp[i][v] = -1;
            }
            FOR(v,0,sum-i)
            {
                if(dp[i][v])
                    dp[i][v+i] = MAX(dp[i][v+i],dp[i][v]-1);
            }
        }
        if(dp[6][sum] != -1)
            printf("Can be divided.\n\n");
        else
            printf("Can't be divided.\n\n");
    }
    return 0;
}
