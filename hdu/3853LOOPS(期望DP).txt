#include<cstdio>   //还是老的递推方程。。但是下面要注意一点。。当p(i,j,0)=1时。。直接略过。。因为那是个死结。。
#include<climits>
#include<algorithm>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<cmath>
#include<stack>
#include<map>
#include<vector>
#define abs(a)  ((a)>0?(a):(-(a)))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define INF 1000000000000LL
#define lowbit(a) (a)^(-(a))
using namespace std;
double dp[1010][1010];
double p[1010][1010][3];
int main(void)
{
    int row,col;
    while(2==scanf("%d%d",&row,&col))
    {
        memset(dp,0,sizeof(dp));
        memset(p,0,sizeof(p));
        for(int i=1;i<=row;i++)
        {
            for(int j=1;j<=col;j++)
            {
                for(int k=0;k<3;k++)
                {
                    scanf("%lf",&p[i][j][k]);
                }
            }
        }
        for(int i=row;i>=1;i--)
        {
            for(int j=col;j>=1;j--)
            {
                if(i==row && j==col)continue;
                if(abs(p[i][j][0]-1.0)<1e-6)
                {
                    dp[i][j]=0.0;
                    continue;
                }
                dp[i][j]=(p[i][j][1]*dp[i][j+1]+p[i][j][2]*dp[i+1][j]+2.0)/(1.0-p[i][j][0]);
                //printf("%d %d %lf\n",i,j,dp[i][j]);
            }
        }
        printf("%.3lf\n",dp[1][1]);
    }
    return 0;
}
