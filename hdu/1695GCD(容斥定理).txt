#include <iostream>
#include <cstdio>
#include <cstring>
#define MAXN 100010
using namespace std;

long long f[MAXN];
bool visit[MAXN];
int num[MAXN];
int prime[MAXN][20];
void INIT(void)
{
    memset(visit,false,sizeof(visit));
    memset(num,0,sizeof(num));
    for(int i = 1;i<=100000;i++)
    {
        f[i] = i;
    }
    for(int i = 2;i<=100000;i++)
    {
        if(!visit[i])
        {
            for(int j = i;j<=100000;j+=i)
            {
                visit[j] = true;
                prime[j][num[j]] = i;
                num[j]++;
                f[j]/=i;
                f[j]*=(i-1);
            }
        }
        f[i] += f[i-1];
    }
}

int dfs(int index,int range,int n)
{
    int ans = 0;
    for(int i=index;i<num[n];i++)
    {
        ans += (range/prime[n][i]-dfs(i+1,range/prime[n][i],n));
    }
    return ans;
}

int main(void)
{
    INIT();
    //printf("%I64d",f[6]);
    int casenum,iCase=1; scanf("%d",&casenum);
    while(casenum--)
    {
        int a,b,c,d,k;
        scanf("%d%d%d%d%d",&a,&b,&c,&d,&k);
        if(k == 0)
        {
            printf("Case %d: %d\n",iCase++,0);
            continue;
        }
        b/=k; d/=k;
        if(b>d)
            swap(b,d);
        long long ans = f[b];
        for(int i = b+1;i<=d;i++)
        {
            ans += (b-dfs(0,b,i));
        }
        printf("Case %d: %I64d\n",iCase++,ans);
    }
}