#include <iostream>   //我是沙茶.....其实都是KMP找循环节的问题。。。
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define maxn 110000
#define INF 2100001000
#define mod 1000000007LL
#define link fsafsdfas
using namespace std;
typedef long long LL;
int nxt[maxn];
char s[maxn];
void getnxt(void){
    int len = strlen(s);
    int k = -1; nxt[0] = -1;
    FOR(i,1,len-1){
        while(k > -1 && s[k+1] != s[i]) k = nxt[k];
        if(s[k+1] == s[i])k++;
        nxt[i] = k;
    }
}
void INIT(void){
    scanf("%s",s); getnxt();
    int len = strlen(s);
    int tt = len-nxt[len-1]-1;
    if(len % tt == 0){
        if(len/tt == 1)printf("%d\n",len);
        else printf("0\n");
    }else{
        int ans = 0;
        while((len+ans)%tt)ans++;
        printf("%d\n",ans);
    }
}
int main(void){
    int casenum; scanf("%d",&casenum);
    while(casenum--)INIT();
    return 0;
}




