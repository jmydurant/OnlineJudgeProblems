#include<cstdio>      //00 01 10 11几个状态转换下就好了。。dpi j k表示第i个珠子。。是j状态上一个是k状态的方法数。。
#include<climits>
#include<algorithm>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<cmath>
#include<stack>
#include<map>
#include<vector>
#define abs(a)  ((a)>0?(a):(-(a)))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define INF -0x0f0f0f0f
#define lowbit(a) (a)^(-(a))
using namespace std;
const int mod=9997;
int dp[100010][2][2];
int main(void)
{
    int N;
    while(EOF!=scanf("%d",&N))
    {
        if(N<0)break;
        if(N==1)
        {
            printf("%d\n",2);
            continue;
        }
        for(int i=0;i<2;i++)
            for(int j=0;j<2;j++)
            dp[2][i][j]=1;
        for(int i=3;i<=N;i++)
        {
            dp[i][0][0]=(dp[i-1][0][1]+dp[i-1][0][0]);
            dp[i][0][1]=(dp[i-1][1][1]+dp[i-1][1][0]);
            dp[i][1][0]=dp[i-1][0][0];
            dp[i][1][1]=(dp[i-1][1][0]+dp[i-1][1][1]);
            for(int j=0;j<2;j++)
            {
                for(int k=0;k<2;k++)
                {
                    dp[i][j][k]%=mod;
                }
            }
        }
        int ans=0;
        ans=(dp[N][0][0]+dp[N][0][1]+dp[N][1][0]+dp[N][1][1]);
        ans%=mod;
        printf("%d\n",ans);
    }
}
