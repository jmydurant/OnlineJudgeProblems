#include <iostream>  //和那个幸运数字的题目一样。。。换汤不换药。。我换了几个数字就过去了。。。
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <climits>
#include <ctime>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define INF 1000000001
#define maxn (1<<20)
#define h(x) (1<<(x))
using namespace std;
typedef long long LL;
int ans[maxn];
struct node
{
    int x1,x2,y1,y2;
}rec[21];
int sss[100010];
int n,m;
void dfs(int ind,int x1,int y1,int x2,int y2,int miu,int state)
{
    if(x1>=x2 || y1>=y2) return;
    if(ind == n)
    {
        if(state)
        {
            FOR(i,1,m)
            {
                if((state|sss[i])<=sss[i])
                {
                    //printf("in   x2 is %d\n",x2);
                    ans[sss[i]] += miu*(x2-x1)*(y2-y1);
                }
            }
        }
        return;
    }
    dfs(ind+1,x1,y1,x2,y2,miu,state); // 没有用东西的。。。
    dfs(ind+1,MAX(x1,rec[ind].x1),MAX(y1,rec[ind].y1),MIN(x2,rec[ind].x2),MIN(y2,rec[ind].y2),-miu,state|h(ind));
}

int main(void)
{
    int iCase = 0;
    while(2 == scanf("%d%d",&n,&m))
    {
        if(n == 0 && m == 0)break;
        rst(ans,0);
        REP(i,n) scanf("%d%d%d%d",&rec[i].x1,&rec[i].y1,&rec[i].x2,&rec[i].y2);
        FOR(i,1,m)
        {
            sss[i] = 0;
            int k; scanf("%d",&k);
            while(k--)
            {
                int s; scanf("%d",&s);
                sss[i] |= h(s-1);
            }
        }
        printf("Case %d:\n",++iCase);
        dfs(0,0,0,INF,INF,-1,0);
        FOR(i,1,m)
        {
            printf("Query %d: %d\n",i,ans[sss[i]]);
        }
        printf("\n");
    }
    return 0;
}
