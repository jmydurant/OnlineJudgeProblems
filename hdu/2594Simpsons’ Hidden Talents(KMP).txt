#include <iostream>   //我是沙茶.....把两个字符串连起来之后匹配。。。
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define maxn 110000
#define INF 2100001000
#define mod 1000000007LL
#define link fsafsdfas
using namespace std;
typedef long long LL;
char a[maxn],b[maxn];
int nxt[maxn],ans;
void getnxt(void){
    int len = strlen(a);
    int k = -1; nxt[0] = -1;
    FOR(i,1,len-1){
        while(k > -1 && a[i] != a[k+1]) k = nxt[k];
        if(a[i] == a[k+1]) k++;
        nxt[i] = k;
    }
}
void solve(void){
    scanf("%s",b);
    int tt = strlen(a);
    int sb = strlen(b); tt = MIN(tt,sb);
    strcat(a,b);
    getnxt();
    int len = strlen(a);
    if(nxt[len-1] == -1)printf("0\n");
    else{
        int ans = MIN(nxt[len-1]+1,tt);
        FOR(i,0,ans-1)
        printf("%c",a[i]);
        printf(" %d\n",ans);
    }
}
int main(void){
    while(~scanf("%s",a))solve();
    return 0;
}

