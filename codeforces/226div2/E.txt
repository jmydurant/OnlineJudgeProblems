#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //一个矩阵快速幂的题目。。找到递推公式就好搞了。。哈哈哈。。有点二。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-9
#define INF 1400000000
#define maxn 1010101
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
//#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
LL mod , tt;
int sx,sy,dx,dy;
LL ee[6][6] = {{2,1,1,1,0,0},
               {1,2,1,1,0,0},
               {1,0,1,0,0,0},
               {0,1,0,1,0,0},
               {2,2,2,2,1,1},
               {1,1,1,1,0,1}
};
struct mat{
    LL a[6][6];
    mat(){
        rst(a,0);
    }
    void INIT(void){
        REP(i,6) a[i][i] = 1;
    }
    void pri(void){
        REP(i,6){
            REP(j,6){
                printf("%I64d ",a[i][j]);
            }printf("\n");
        }
    }
};
mat operator + (const mat &a, const mat &b){
    mat ans;
    REP(i,6){
        REP(j,6){
            ans.a[i][j] = a.a[i][j] + b.a[i][j];
            if(ans.a[i][j] >= mod) ans.a[i][j] -= mod;
        }
    }return ans;
}
mat operator * (const mat &a, const mat &b){
    mat ans;
    REP(i,6){
        REP(j,6){
            if(a.a[i][j] > 0){
                REP(k,6){
                    ans.a[i][k] += a.a[i][j] * b.a[j][k];
                    if(ans.a[i][k] >= mod) ans.a[i][k] %= mod;
                }
            }
        }
    }return ans;
}
mat operator ^ (mat a,LL n){
    mat ans; ans.INIT();
    while(n){
        if(n % 2){
            ans = ans * a;
        }
        a = a * a;
        n /= 2;
    }return ans;
}
int main(void){
    while(cin >> mod >> sx >> sy >> dx >> dy >> tt){
        mat e;
        memcpy(e.a,ee,sizeof(ee));
        dx = (dx % mod + mod) % mod;
        dy = (dy % mod + mod) % mod;
        mat fuck;
        fuck.a[0][0] = sx - 1; fuck.a[0][1] = sy - 1;
        fuck.a[0][2] = dx;     fuck.a[0][3] = dy;
        fuck.a[0][4] = 1;
        mat ans;
        ans = (e ^ tt);
        ans = fuck * ans;
        printf("%I64d %I64d\n",ans.a[0][0] + 1 , ans.a[0][1] + 1);
    }return 0;
}

