#include<cstdio>
#include<iostream>    //直接搬来的代码哈。。我实在是懒得写了。。因为要用大数算法。。。
#include<cstring>   //原来自己想了一个递归的方法。。。但是肯定在这种数据规模下直接爆栈。。所以。。。想了一下数学方法。。当然就是这个。。
#include<climits>    //好坑爹吧。。。其实这个数很重要的说。。只是自己知道的数学知识太少了罢了。。
#include<stack>
#include<map>
#include<cmath>
#define MAX(a,b)  ((a)>(b)?(a):(b))
#define MIN(a,b)  ((a)<(b)?(a):(b))
#define abs(a) ((a)>0?(a):(-(a)))
#define INF 0x7f7f7f7f
using namespace std;
int a[100005];
void output(int x);
void process(int m, int n)  /////(m-n+1)/(m+1)C(m+n,m)
{
     int mm=m+n;
     int x=(int)log(mm)*mm/15+2;
     int i,j,k,sign;
     a[0]=m-n+1;
     for(i=1;i<x;i++)
     a[i]=0;
     while(mm>n)
     {
         sign=0;
         for(i=0;i<x;i++)
         {
             k=a[i]*mm+sign;
             a[i]=k%100000;
             sign=k/100000;
         }
         mm--;
     }
     m++;
     while(m>1)
     {
         sign=0;
         for(i=x;i>=0;i--)
         {
            k=sign*100000+a[i];
            a[i]=k/m;
            sign=k%m;
         }
         m--;
     }
     output(x);
}
void output(int x)
{
     int i,j;
     for(i=x;i>=0;i--)
     {
         if(a[i]!=0)
         break;
     }
     printf("%d",a[i]);
     i--;
     for(;i>=0;i--)
     {
         if(a[i]<=9)
         printf("0000%d",a[i]);
         else if(a[i]<=99)
         printf("000%d",a[i]);
         else if(a[i]<=999)
         printf("00%d",a[i]);
         else if(a[i]<=9999)
         printf("0%d",a[i]);
         else
         printf("%d",a[i]);
     }
     printf("\n");
}
int main(void)
{
     int m,n,t;
     scanf("%d",&t);
     while(t--)
     {
         scanf("%d%d",&m,&n);
         if(m<n)
         printf("0\n");
         else if(n==0)
         printf("1\n");
         else
         process(m,n);
     }
     return 0;
}
