#include <stdio.h>   //输入格式和poj的题目有点不一样。。坑爹啊。。。
#include <iostream>
#include <cstring>
#include <queue>
#include <cstdlib>
#include <cmath>
#include <map>
#include <string>
#define INF 100000000
#define MAXN 1000
#define eps 1e-10
#define abs(a) ((a)>0?(a):(-(a)))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
using namespace std;
int ans[MAXN];
int fa[MAXN];
vector<int> tree[MAXN],Q[MAXN];
bool in[MAXN];
bool visit[MAXN];
int N;
int find_fa(int x)
{
    if(fa[x]==x)
        return x;
    else
    {
        fa[x]=find_fa(fa[x]);
    }
    return fa[x];
}
void INIT(void)
{
    for(int i=1;i<=N;i++)
    {
        ans[i]=0;
        fa[i]=i;
        tree[i].clear();
        Q[i].clear();
        in[i]=false;
        visit[i]=false;
    }
}
void tarjan(int u)
{
    int n=tree[u].size();
    for(int i=0;i<n;i++)
    {
        tarjan(tree[u][i]);
        fa[tree[u][i]]=u;
    }
    visit[u]=true;
    n=Q[u].size();
    for(int i=0;i<n;i++)
    {
        if(visit[Q[u][i]])
        {
            ans[find_fa(Q[u][i])]++;
        }
    }
}
int main(void)
{
    int M;
    while(EOF!=scanf("%d",&N))
    {
        INIT();
        for(int i=1;i<=N;i++)
        {
            int m,n;
            scanf("%d:(%d)",&m,&n);
            for(int j=0;j<n;j++)
            {
                int k;
                scanf("%d",&k);
                tree[m].push_back(k);
                in[k]=true;
            }
        }
        scanf("%d",&M);
        char L,R,MID;
        for(int i=1;i<=M;i++)
        {
            while((L=getchar()) && L!='(');
            int a,b;
            scanf("%d",&a);
            while((MID=getchar()) && MID!=',');
            scanf("%d",&b);
            Q[a].push_back(b);
            Q[b].push_back(a);
            while((R=getchar()) && R!=')');
        }
        int root;
        for(int i=1;i<=N;i++)
        {
            if(!in[i])
            {
                root=i;
                break;
            }
        }
        tarjan(root);
        for(int i=1;i<=N;i++)
        {
            if(ans[i])
            {
                printf("%d:%d\n",i,ans[i]);
            }
        }
    }
    return 0;
}
