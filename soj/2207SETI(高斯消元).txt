#include<cstdio>  //还是高斯消元解同余方程组。。。只是保证有唯一解罢了。。。同余方程组老子已经基本会解了。。。题意有点难懂。。就翻译在下面吧。。
#include<climits>
#include<algorithm>
#include<cstring>
#include<queue>
#include<cstdlib>
#include<cmath>
#include<stack>
#include<map>
#include<vector>
#define abs(a)  ((a)>0?(a):(-(a)))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define INF 1000000000000LL
#define lowbit(a) (a)^(-(a))
using namespace std;
int a[100][100];
int x[100];
char S[100];
int equ,var,mod;
inline int gcd(int a,int b)
{
    int tmpt;
    while(b)
    {
        tmpt=a%b;
        a=b;
        b=tmpt;
    }
    return a;
}
int lcm(int a,int b)
{
    int ans=a;
    ans/=gcd(a,b);
    ans*=b;
    return ans;
}
int p_pow(int a,int n)
{
    int ans=1;
    while(n)
    {
        if(n&1)
        {
            ans*=a;
            ans%=mod;
        }
        a*=a;
        a%=mod;
        n>>=1;
    }
    return ans;
}
void IINT(void)
{
    for(int i=0;i<equ;i++)
    {
        for(int j=0;j<var;j++)
        {
            a[i][j]=p_pow(i+1,j);
        }
    }
    memset(x,0,sizeof(x));
}
void Gauss(void)
{
    int k=0,col=0;
    int maxr;
    for(;k<equ && col<var ;k++,col++)
    {
        maxr=k;
        for(int i=k+1;k<col;k++)
        {
            if(abs(a[k][col])>abs(a[i][col]))
                maxr=i;
        }
        if(maxr!=k)
            for(int i=col;i<=var;i++)swap(a[k][i],a[maxr][i]);
        if(0==a[k][col])
        {
            k--;
            continue;
        }
        for(int i=k+1;i<equ;i++)
        {
            int tmpt=lcm(abs(a[k][col]),abs(a[i][col]));
            int ta=tmpt/a[k][col];
            int tb=tmpt/a[i][col];
            for(int j=col;j<=var;j++)
            {
                int res=a[k][j]*ta-a[i][j]*tb;
                a[i][j]=(res%mod+mod)%mod;
            }
        }
    }
    for(int i=equ-1;i>=0;i--)
    {
        int tmpt=a[i][col];
        for(int j=i+1;j<var;j++)
        {
            tmpt-=a[i][j]*x[j];
            tmpt=(tmpt%mod+mod)%mod;
        }
        while(tmpt%a[i][i])tmpt+=mod;
        x[i]=(tmpt/a[i][i])%mod;
    }
}
int main(void)
{
    int casenum; scanf("%d",&casenum);
    while(casenum--)
    {
        scanf("%d%s",&mod,S);
        int len=strlen(S);
        var=len;equ=len;
        IINT();
        for(int i=0;i<len;i++)
        {
            if('*'==S[i])a[i][var]=0;
            else a[i][var]=S[i]-'a'+1;
        }
        Gauss();
        for(int i=0;i<var;i++)
        {
            printf("%d%c",x[i],i==(var-1)?'\n':' ');
        }
    }
    return 0;
}
void Debug(void)
{
    for(int i=0;i<equ;i++)
    {
        for(int j=0;j<=var;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
}
题目大意：给你一个素数P(P<=30000)和一串长为n的字符串str[]。字母'*'代表0，字母a-z分别代表1-26，这n个字符所代表的数字分别代表f(1)、f(2)....f(n)。
定义: f (k) = ∑0<=i<=n-1aiki (mod p) (1<=k<=n,0<=ai<P)
求a0、a1.....an-1。题目保证肯定有唯一解
解题思路：高斯消元。根据上面的公式显然可以列出有n个未知数的n个方程式：
a0*1^0 + a1*1^1+a2*1^2+........+an-1*1^(n-1) = f(1)
a0*2^0 + a1*2^1+a2*2^2+........+an-1*2^(n-1) = f(2)
......
a0*n^0 + a1*n^1+a2*n^2+........+an-1*n^(n-1) = f(n)
然后采用高斯消元法来解上面的方程组即可。