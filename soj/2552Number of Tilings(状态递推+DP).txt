#include<cstdio>    //说是DP很牵强。。因为根本就没有规划什么。。。
#include<cstring>    //我来解释一下dp（i，j）。。。i是列数。。j=0表示这一列根本就没被占。。1表示这一列上边一格被占。。2表示下面一格被占。。3表示占满
using namespace std;  //然后递推方程就好写了。。本来可以用矩阵的快速幂。。但是数据规模小。。没有必要，。。
int dp[1000100][4];
void IINT(void)
{
    dp[1][0]=1;dp[1][1]=0;
    dp[1][2]=0;dp[1][3]=1;
    for(int i=2;i<=1000000;i++)
    {
        dp[i][0]=dp[i-1][3]%10000;
        dp[i][1]=(dp[i-1][0]+dp[i-1][2])%10000;
        dp[i][2]=(dp[i-1][0]+dp[i-1][1])%10000;
        dp[i][3]=(dp[i-1][0]+dp[i-1][1]+dp[i-1][2]+dp[i-1][3])%10000;
    }
}
int main(void)
{
    int N;
    memset(dp,0,sizeof(dp));
    IINT();
    while(EOF!=scanf("%d",&N))
    {
        printf("%d\n",dp[N][3]);
    }
    return 0;
}
