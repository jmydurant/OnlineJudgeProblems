#include<cstdio>
#include<cstring>
#include<queue>  //按照字典序输出就要去字典序查找。。。。所以搜索方向确定。。。
#include<vector>//注意。。。每个case输出完之后要多输出一个空行。。。
#include<map>
#include<climits>
#include<stack>
#include<cmath>
using namespace std;
int visit[30][30];
int road[100];
int dx[]={-1,1,-2,2,-2,2,-1,1};
int dy[]={-2,-2,-1,-1,1,1,2,2};
int dfs(int x,int y,int t);
int row,col;
int main(void)
{
    int casenum;
    scanf("%d",&casenum);
    for(int abc=1;abc<=casenum;abc++)
    {
        int ok;
        scanf("%d%d",&row,&col);
        memset(road,0,sizeof(road));
        memset(visit,0,sizeof(visit));
        ok=dfs(1,1,1);
        printf("Scenario #%d:\n",abc);
        if(ok)
        {
            for(int i=1;i<=row*col;i++)
            {
                printf("%c%d",road[i]%30+'A'-1,road[i]/30);
            }
        }
        else
        {
            printf("impossible");
        }
        printf("\n\n");
    }
}
int dfs(int x,int y,int t)
{
    if(x<1||y<1||x>row||y>col)return 0;
    if(visit[x][y])return 0;
    if(t==row*col){road[t]=x*30+y; return 1;}
    visit[x][y]=1;
    for(int i=0;i<8;i++)
    {
        if(dfs(x+dx[i],y+dy[i],t+1)){road[t]=x*30+y;return 1;}
    }
    visit[x][y]=0;
    return 0;
}





