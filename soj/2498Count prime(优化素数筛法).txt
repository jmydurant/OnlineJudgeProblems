#include<cstring>    //看了半天纠结啊。。。就是能解决区间比较小的情况。。。效率还是不错的。。。
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<climits>
#include<queue>
#include<cstdlib>
#include<stack>
#define abs(a)  ((a)>0?(a):(-a))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define MOD 19871118LL
using namespace std;
int prime[1000100];
bool notprime[1000100];
int num;
void get_prime(int L,int R)
{
    num=0;
    memset(notprime,0,sizeof(notprime));
    int d=R-L+1;
    int root=sqrt(1.0*R);
    for(int i=(L%2==1);i<d;i+=2)notprime[i]=true;
    for(int i=3;i<=root;i+=2)
    {
        if(i>L && prime[i-L])continue;
        int j=(L/i)*i;
        if(j<L)j+=i;
        if(j==i)j+=i;
        j-=L;
        for(;j<d;j+=i)notprime[j]=true;
    }
    if(L<=1)notprime[1-L]=1;
    if(L<=2)notprime[2-L]=0;
    for(int i=0;i<d;i++)
    {
        if(!notprime[i])num++;
    }
}
int main(void)
{
    int l,r;
    while(2==scanf("%d%d",&l,&r))
    {
        get_prime(l,r);
        printf("%d\n",num);
    }
    return 0;
}
