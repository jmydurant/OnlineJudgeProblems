#include<cstdio>             //思想很简单。。对于M。。如果只有x1，x2.。那么先加上单独被x1，x2整除的个数。。然后减去能同时被x1，x2整除的个数。。
#include<iostream>          //维恩图应该更好理解。。。。但是主要中间步骤要用大数。。。
#include<cstring>
#include<climits>
#include<stack>
#include<map>
#define MAX(a,b)  ((a)>(b)?(a):(b))
#define MIN(a,b)  ((a)<(b)?(a):(b))
using namespace std;
int a[20];
inline int gcd(int a,int b)
{
    int tmpt;
    while(b)
    {
        tmpt=a%b;
        a=b;b=tmpt;
    }
    return a;
}
int make_ans(int n,int m)
{
    int ans=0;
    long long tmpt;
    int flag;
    for(int i=1;i<(1<<n);i++)
    {
        flag=0;tmpt=1;
        for(int j=0;(j<n)&&(tmpt<=m);j++)
        {
            if(i&(1<<j))
            {
                flag++;
                tmpt=(long long)(a[j]/gcd(tmpt,a[j]))*tmpt;
            }
        }
        if(flag&1)ans+=m/tmpt;
        else ans-=m/tmpt;
    }
    return ans;
}
int main(void)
{
    int casenum;  scanf("%d",&casenum);
    while(casenum--)
    {
        int M;
        int N; scanf("%d%d",&N,&M);
        for(int i=0;i<N;i++)scanf("%d",a+i);
        int res=make_ans(N,M);
        printf("%d\n",res);
    }
    return 0;
}
