#include <cstdio>    //最小点覆盖等价于二分图最大匹配。。所以。。秒了。。。
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <vector>
#define INF 100000000
#define mod 1000000007LL
#define MAXN 110
#define eps  1e-3
#define abs(x) ((x)>0?(x):(-(x)))
#define link fadsfasdfasf
using namespace std;
typedef long long LL;

bool puzzle[MAXN][MAXN];
bool visit[MAXN];
int link[MAXN];
int n,m;

bool dfs(int u)
{
    for(int i = 1;i<m;i++)
    {
        if((!visit[i]) && puzzle[u][i])
        {
            visit[i] = true;
            int j = link[i];
            link[i] = u;
            if(j == -1 || dfs(j))
                return true;
            link[i] = j;
        }
    }
    return false;
}

int Hungary(void)
{
    int ans = 0;
    memset(link,-1,sizeof(link));
    for(int i = 1;i<n;i++)
    {
        for(int j = 0;j<m;j++)visit[j] = false;
        if(dfs(i))
            ans++;
    }
    return ans;
}

int main(void)
{
    int k;
    while(EOF!=scanf("%d",&n))
    {
        if(!n)
            break;
        scanf("%d%d",&m,&k);
        memset(puzzle,false,sizeof(puzzle));
        for(int i = 0;i<k;i++)
        {
            int temp,a,b;
            scanf("%d%d%d",&temp,&a,&b);
            if(a == 0 || b == 0)
                continue;
            puzzle[a][b] = true;
        }
        int ans = Hungary();
        printf("%d\n",ans);
    }
    return 0;
}
