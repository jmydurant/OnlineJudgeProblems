#include <stdio.h>
#include <string.h>
char s1[100];
char s2[100];
int a[100];
int b[100];
int substruction[110];
int main(void)
{
    while(2==scanf("%s%s",&s1,&s2)&&(strcmp(s1,"0")||strcmp(s2,"0")))
    {
        int i,j;
        int x,y;
        int length;

        memset(a,0,sizeof(a));
        memset(b,0,sizeof(b));
        memset(substruction,0,sizeof(substruction));
        i=strlen(s1);
        j=strlen(s2);
        for(x=0;x<i;x++)
        {
            a[x]=(s1[i-x-1]-'0');
        }
        for(y=0;y<j;y++)
        {
            b[y]=(s2[j-y-1]-'0');

        }
        for(x=99;a[x]==0;x--)
        {
            ;
        }
        for(y=99;b[y]==0;y--)
        {
            ;
        }
        if(x<y)
        {
            printf("are you crazy?\n");
        }
        else if(x>y)
        {
            for(i=0;i<=x;i++)
            {
                substruction[i]+=(a[i]-b[i]);
                if(substruction[i]<0)
                {
                    substruction[i+1]--;
                    substruction[i]+=10;
                }
            }
            for(i=99;substruction[i]==0;i--)
            {
                ;
            }
            for(;i>=0;i--)
            {
                printf("%d",substruction[i]);
            }
                printf("\n");




        }
        else
        {
            for(i=x;(a[i]==b[i])&&i>=0;i--)
            {
                ;
            }
            if(i<0)
            {
                puts("well done!");
            }
            else if(a[i]<b[i])
            {
                puts("are you crazy?");
            }
            else
            {
                for(i=0;i<=x;i++)
            {
                substruction[i]+=(a[i]-b[i]);
                if(substruction[i]<0)
                {
                    substruction[i+1]--;
                    substruction[i]+=10;
                }
            }
                for(i=99;substruction[i]==0;i--)
                {
                    ;
                }
                for(;i>=0;i--)
                {
                    printf("%d",substruction[i]);
                }
                printf("\n");

            }
        }

    }
    return 0;
}
