#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //dfs一阵狂搜即可。。哭。。。剪枝优化很重要。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 140000000
#define maxn 500
#define mod 835672545LL
#define Pi acos(-1.0)
#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
int n,v,ans;
int a[25];
void dfs(int ind,int num,int remain){
    if(ind == 0)return;
    int tt = remain / a[ind];
    if(num + tt >= ans)return;
    if(tt * a[ind] == remain){
        ans = num + tt;
        return;
    }
    for(int i = tt;i>=0;i--){
        if(num + i + (remain - i*a[ind] -1) / a[ind-1] +1 >= ans)return;
        dfs(ind-1,num+i,remain - i*a[ind]);
    }
}
void solve(void){
    scanf("%d%d",&n,&v);
    FOR(i,1,n) scanf("%d",a+i);
    sort(a+1,a+n+1);
    a[0] = 1;
    ans = v / a[1];
    for(int i = 2;i<=n;i++){
        if(v % a[i] == 0)ans = v / a[i];
    }
    dfs(n,0,v);
    printf("%d\n",ans);
}
int main(void){
    int casenum; scanf("%d",&casenum);
    while(casenum--) solve();
    return 0;
}
