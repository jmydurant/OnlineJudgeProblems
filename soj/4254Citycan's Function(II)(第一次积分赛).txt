#include<stdio.h>
#include<string.h>
void pingfang(int k);
void chengyia(int k);
struct matrix{
long long num[3][3];
}a[5000];
int main(void)
{
    int casenum;
    int n;
    int zuofa[100];
    struct matrix f1;
    scanf("%d",&casenum);                          //学会了一招。。将数列通项公式变换为矩阵
    while(casenum>0)                               //快速幂貌似也掌握了。。敲了3个小时的代码。。爽。。
    {
        int i,j,k;
        casenum--;
        k=0;
        scanf("%d",&n);
        n--;
        memset(zuofa,0,sizeof(zuofa));
        f1.num[0][0]=3;
        f1.num[0][1]=1;
        f1.num[0][2]=1;
        f1.num[1][0]=0;
        f1.num[1][1]=0;
        f1.num[1][2]=0;
        f1.num[2][0]=0;
        f1.num[2][1]=0;
        f1.num[2][2]=0;
        a[0].num[0][0]=3;
        a[0].num[0][1]=1;
        a[0].num[0][2]=0;
        a[0].num[1][0]=2;
        a[0].num[1][1]=0;
        a[0].num[1][2]=0;
        a[0].num[2][0]=1;
        a[0].num[2][1]=0;
        a[0].num[2][2]=1;
        if(-1==n)
        {
            printf("%d\n",1);
            continue;
        }
        if(0==n)
        {
            printf("%d\n",3);
            continue;
        }
        for(i=0,j=n;;i++)
        {
            if(1==j)
            {
                zuofa[i]=1;
                break;
            }
            else
            {
                zuofa[i]=j%2;
                j/=2;
            }
        }
        for(i=99;0==zuofa[i];i--)
        {
            ;
        }
        i--;
        for(;i>=0;i--)
        {
            if(zuofa[i])
            {
                pingfang(k++);
                chengyia(k++);
            }
            else
            {
                pingfang(k++);
            }
        }
        printf("%d\n",((3*a[k].num[0][0])%20121223+(a[k].num[1][0])%20121223+(a[k].num[2][0])%20121223)%20121223);

    }
    return 0;
}
void pingfang(int k)
{
    a[k+1].num[0][0]=((a[k].num[0][0]*a[k].num[0][0])%20121223+(a[k].num[0][1]*a[k].num[1][0])%20121223+(a[k].num[0][2]*a[k].num[2][0])%20121223)%20121223;
    a[k+1].num[0][1]=((a[k].num[0][0]*a[k].num[0][1])%20121223+(a[k].num[0][1]*a[k].num[1][1])%20121223+(a[k].num[0][2]*a[k].num[2][1])%20121223)%20121223;
    a[k+1].num[0][2]=((a[k].num[0][0]*a[k].num[0][2])%20121223+(a[k].num[0][1]*a[k].num[1][2])%20121223+(a[k].num[0][2]*a[k].num[2][2])%20121223)%20121223;
    a[k+1].num[1][0]=((a[k].num[1][0]*a[k].num[0][0])%20121223+(a[k].num[1][1]*a[k].num[1][0])%20121223+(a[k].num[1][2]*a[k].num[2][0])%20121223)%20121223;
    a[k+1].num[1][1]=((a[k].num[1][0]*a[k].num[0][1])%20121223+(a[k].num[1][1]*a[k].num[1][1])%20121223+(a[k].num[1][2]*a[k].num[2][1])%20121223)%20121223;
    a[k+1].num[1][2]=((a[k].num[1][0]*a[k].num[0][2])%20121223+(a[k].num[1][1]*a[k].num[1][2])%20121223+(a[k].num[1][2]*a[k].num[2][2])%20121223)%20121223;
    a[k+1].num[2][0]=((a[k].num[2][0]*a[k].num[0][0])%20121223+(a[k].num[2][1]*a[k].num[1][0])%20121223+(a[k].num[2][2]*a[k].num[2][0])%20121223)%20121223;
    a[k+1].num[2][1]=((a[k].num[2][0]*a[k].num[0][1])%20121223+(a[k].num[2][1]*a[k].num[1][1])%20121223+(a[k].num[2][2]*a[k].num[2][1])%20121223)%20121223;
    a[k+1].num[2][2]=((a[k].num[2][0]*a[k].num[0][2])%20121223+(a[k].num[2][1]*a[k].num[1][2])%20121223+(a[k].num[2][2]*a[k].num[2][2])%20121223)%20121223;
}
void chengyia(int k)
{
    a[k+1].num[0][0]=((a[0].num[0][0]*a[k].num[0][0])%20121223+(a[0].num[0][1]*a[k].num[1][0])%20121223+(a[0].num[0][2]*a[k].num[2][0])%20121223)%20121223;
    a[k+1].num[0][1]=((a[0].num[0][0]*a[k].num[0][1])%20121223+(a[0].num[0][1]*a[k].num[1][1])%20121223+(a[0].num[0][2]*a[k].num[2][1])%20121223)%20121223;
    a[k+1].num[0][2]=((a[0].num[0][0]*a[k].num[0][2])%20121223+(a[0].num[0][1]*a[k].num[1][2])%20121223+(a[0].num[0][2]*a[k].num[2][2])%20121223)%20121223;
    a[k+1].num[1][0]=((a[0].num[1][0]*a[k].num[0][0])%20121223+(a[0].num[1][1]*a[k].num[1][0])%20121223+(a[0].num[1][2]*a[k].num[2][0])%20121223)%20121223;
    a[k+1].num[1][1]=((a[0].num[1][0]*a[k].num[0][1])%20121223+(a[0].num[1][1]*a[k].num[1][1])%20121223+(a[0].num[1][2]*a[k].num[2][1])%20121223)%20121223;
    a[k+1].num[1][2]=((a[0].num[1][0]*a[k].num[0][2])%20121223+(a[0].num[1][1]*a[k].num[1][2])%20121223+(a[0].num[1][2]*a[k].num[2][2])%20121223)%20121223;
    a[k+1].num[2][0]=((a[0].num[2][0]*a[k].num[0][0])%20121223+(a[0].num[2][1]*a[k].num[1][0])%20121223+(a[0].num[2][2]*a[k].num[2][0])%20121223)%20121223;
    a[k+1].num[2][1]=((a[0].num[2][0]*a[k].num[0][1])%20121223+(a[0].num[2][1]*a[k].num[1][1])%20121223+(a[0].num[2][2]*a[k].num[2][1])%20121223)%20121223;
    a[k+1].num[2][2]=((a[0].num[2][0]*a[k].num[0][2])%20121223+(a[0].num[2][1]*a[k].num[1][2])%20121223+(a[0].num[2][2]*a[k].num[2][2])%20121223)%20121223;
}

