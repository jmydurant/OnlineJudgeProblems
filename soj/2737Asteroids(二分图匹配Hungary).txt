#include <iostream>   //我是沙茶....今天又写搓了。。
#include <cstdio>     //算是比较裸的二分图了。。
#include <cstring>
#include <algorithm>
#include <queue>
#include <stack>
#include <climits>
#include <ctime>
#include <cmath>
#include <set>
#include <map>
#include <string>
#include <vector>
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define abs(x) ((x)>0?(x):(-(x)))
#define FOR(i,a,b) for(int i = (a);i<=(b);i++)
#define FORD(i,a,b) for(int i = (a);i>=(b);i--)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define rst(x,k) memset(x,k,sizeof(x))
#define lowbit(x) ((x)&(-(x)))
#define h(x) (1<<(x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define eps 1e-6
#define INF 1400000000
#define maxn 21000
//#define mod 1000000007LL
#define fr first
#define se second
#define Pi acos(-1.0)
#define link fjksldfjaslkdfjas
using namespace std;
typedef long long LL;
struct node{
    int t,nxt;
}edge[maxn];
int headline[510] , E , n, m , link[510];
int visit[510] , ind;
void add(int f,int t){
    edge[E].t = t;
    edge[E].nxt = headline[f];
    headline[f] = E++;
}
bool Hungary(int u){
    for(int i = headline[u];~i;i = edge[i].nxt){
        int v = edge[i].t;
        if(visit[v] == ind)continue;
        visit[v] = ind;
        if(link[v] == -1 || Hungary(link[v])){
            link[v] = u;
            return true;
        }
    }return false;
}
void solve(void){
    int ans = 0; rst(link,-1);
    rst(headline,-1); E = 0;
    REP(i,m){
        int a,b; scanf("%d%d",&a,&b);
        add(a,b);
    }
    ind = 0; rst(visit,0);
    FOR(i,1,n){
        ind = i;
        if(Hungary(i)) ans++;
    }
    printf("%d\n",ans);
}
int main(void){
    while(2 == scanf("%d%d",&n,&m)) solve();
    return 0;
}
